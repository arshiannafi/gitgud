#!/usr/bin/env python
import sys
import git
import os
import requests
import termios
from termios import tcflush, TCIFLUSH






def postMessage(message):
	url = ""
	data = {'message': message}
	headers = {'Content-type': 'application/json'}
	#r = requests.post(url, data=json.dumps(data), headers=headers)
	# r.json
	return False


def continue_commit_prompt():
	print "Your commit message is bad. Do you want to continue your commit? [Y/n]"
	valid = {"": True, "yes": True, "y": True, "no": False, "n": False}
	sys.stdin = open("/dev/tty", "r")
	choice = raw_input().lower()

	return valid[choice]


def main():
	message_file = sys.argv[1]
	try:
		txt_file = open(message_file, 'r')
		commit_message = txt_file.read()
	finally:
		txt_file.close()

	# check thie return score
	if postMessage(commit_message):
		# commit if score is good
		print "Your commit message is good."
		sys.exit(0)
	else:
		# otherwise, ask user if they want to continue the commit
		if continue_commit_prompt():
			sys.exit(0)
		else:
			# abort if user says no
			print("Commit abort.")
			sys.exit(1)




if __name__ == "__main__":
  main()
